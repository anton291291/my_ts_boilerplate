// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EntranceForm should render correctly 1`] = `
<EntranceForm>
  <ForwardRef(Fade)
    in={true}
    timeout={500}
  >
    <Transition
      appear={true}
      enter={true}
      exit={true}
      in={true}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={500}
      unmountOnExit={false}
    >
      <FormContainer
        style={
          Object {
            "opacity": 1,
            "visibility": undefined,
          }
        }
      >
        <div
          className="FormContainer-qvz05a-0 fLNrOt"
          style={
            Object {
              "opacity": 1,
              "visibility": undefined,
            }
          }
        >
          <Header
            variant="h4"
          >
            <WithStyles(ForwardRef(Typography))
              className="Header-qvz05a-1 jdMXIA"
              variant="h4"
            >
              <ForwardRef(Typography)
                className="Header-qvz05a-1 jdMXIA"
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
                variant="h4"
              >
                <h4
                  className="MuiTypography-root Header-qvz05a-1 jdMXIA MuiTypography-h4"
                >
                  Welcome to Conway\`s Game of Life
                </h4>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
          </Header>
          <StyledInput
            label="Enter your name"
            onChange={[Function]}
            required={true}
            variant="outlined"
          >
            <WithStyles(ForwardRef(TextField))
              className="StyledInput-sc-5skuza-2 cdOkNE"
              label="Enter your name"
              onChange={[Function]}
              required={true}
              variant="outlined"
            >
              <ForwardRef(TextField)
                className="StyledInput-sc-5skuza-2 cdOkNE"
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                label="Enter your name"
                onChange={[Function]}
                required={true}
                variant="outlined"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root StyledInput-sc-5skuza-2 cdOkNE"
                  color="primary"
                  disabled={false}
                  error={false}
                  fullWidth={false}
                  required={true}
                  variant="outlined"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root StyledInput-sc-5skuza-2 cdOkNE"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    required={true}
                    variant="outlined"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root StyledInput-sc-5skuza-2 cdOkNE"
                    >
                      <WithStyles(ForwardRef(InputLabel))>
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                data-shrink={false}
                              >
                                Enter your name
                                <span
                                  className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                >
                                   
                                  *
                                </span>
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(OutlinedInput))
                        autoFocus={false}
                        fullWidth={false}
                        label={
                          <React.Fragment>
                            Enter your name
                             *
                          </React.Fragment>
                        }
                        multiline={false}
                        onChange={[Function]}
                      >
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                              "marginDense": "MuiOutlinedInput-marginDense",
                              "multiline": "MuiOutlinedInput-multiline",
                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          fullWidth={false}
                          label={
                            <React.Fragment>
                              Enter your name
                               *
                            </React.Fragment>
                          }
                          multiline={false}
                          onChange={[Function]}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            multiline={false}
                            onChange={[Function]}
                            renderSuffix={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              onChange={[Function]}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                onClick={[Function]}
                              >
                                <input
                                  aria-invalid={false}
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiOutlinedInput-input"
                                  disabled={false}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={true}
                                  type="text"
                                />
                                <WithStyles(ForwardRef(NotchedOutline))
                                  className="MuiOutlinedInput-notchedOutline"
                                  label={
                                    <React.Fragment>
                                      Enter your name
                                       *
                                    </React.Fragment>
                                  }
                                  labelWidth={0}
                                  notched={false}
                                >
                                  <ForwardRef(NotchedOutline)
                                    className="MuiOutlinedInput-notchedOutline"
                                    classes={
                                      Object {
                                        "legend": "PrivateNotchedOutline-legend-90",
                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-91",
                                        "legendNotched": "PrivateNotchedOutline-legendNotched-92",
                                        "root": "PrivateNotchedOutline-root-89",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Enter your name
                                         *
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <fieldset
                                      aria-hidden={true}
                                      className="PrivateNotchedOutline-root-89 MuiOutlinedInput-notchedOutline"
                                    >
                                      <legend
                                        className="PrivateNotchedOutline-legendLabelled-91"
                                      >
                                        <span>
                                          Enter your name
                                           *
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </ForwardRef(NotchedOutline)>
                                </WithStyles(ForwardRef(NotchedOutline))>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(OutlinedInput)>
                      </WithStyles(ForwardRef(OutlinedInput))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
          </StyledInput>
          <StyledBtn
            onClick={[Function]}
          >
            <div
              className="StyledBtn-sc-5skuza-0 bsbHWd"
              onClick={[Function]}
            >
              Start
            </div>
          </StyledBtn>
        </div>
      </FormContainer>
    </Transition>
  </ForwardRef(Fade)>
</EntranceForm>
`;
