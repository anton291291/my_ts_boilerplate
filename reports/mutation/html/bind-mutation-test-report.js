document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\components\\Cell\\index.test.tsx":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":16,"line":9},"start":{"column":10,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1","location":{"end":{"column":2,"line":19},"start":{"column":24,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2","location":{"end":{"column":45,"line":12},"start":{"column":40,"line":12}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3","location":{"end":{"column":35,"line":16},"start":{"column":10,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":6,"line":18},"start":{"column":43,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport { mount } from 'enzyme';\r\nimport { mountToJson } from 'enzyme-to-json';\r\n\r\nimport { Cell } from './index';\r\nimport store from '@/store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\ndescribe('Cell', () => {\r\n    const output = mount(\r\n        <Provider store={store}>\r\n            <Cell index={0} isClicked={false} />\r\n        </Provider>\r\n    );\r\n\r\n    test('should render correctly', () => {\r\n        expect(mountToJson(output)).toMatchSnapshot();\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\components\\DasboardBtn\\index.test.tsx":{"language":"typescript","mutants":[{"id":"5","location":{"end":{"column":24,"line":10},"start":{"column":10,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"6","location":{"end":{"column":2,"line":57},"start":{"column":32,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"7","location":{"end":{"column":35,"line":17},"start":{"column":10,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":6,"line":19},"start":{"column":43,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"9","location":{"end":{"column":50,"line":21},"start":{"column":10,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"11","location":{"end":{"column":26,"line":22},"start":{"column":21,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"10","location":{"end":{"column":6,"line":24},"start":{"column":58,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"12","location":{"end":{"column":44,"line":22},"start":{"column":37,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"15","location":{"end":{"column":67,"line":23},"start":{"column":63,"line":23}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"16","location":{"end":{"column":73,"line":26},"start":{"column":10,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"17","location":{"end":{"column":6,"line":29},"start":{"column":81,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"18","location":{"end":{"column":35,"line":27},"start":{"column":21,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"20","location":{"end":{"column":42,"line":28},"start":{"column":28,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"19","location":{"end":{"column":53,"line":27},"start":{"column":44,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"22","location":{"end":{"column":68,"line":28},"start":{"column":63,"line":28}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"21","location":{"end":{"column":55,"line":28},"start":{"column":49,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"24","location":{"end":{"column":6,"line":34},"start":{"column":120,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"23","location":{"end":{"column":112,"line":31},"start":{"column":10,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"25","location":{"end":{"column":33,"line":32},"start":{"column":21,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"26","location":{"end":{"column":58,"line":32},"start":{"column":48,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"27","location":{"end":{"column":40,"line":33},"start":{"column":28,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"28","location":{"end":{"column":60,"line":33},"start":{"column":53,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"29","location":{"end":{"column":109,"line":36},"start":{"column":10,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"30","location":{"end":{"column":6,"line":39},"start":{"column":117,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"31","location":{"end":{"column":33,"line":37},"start":{"column":21,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"32","location":{"end":{"column":58,"line":37},"start":{"column":48,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"33","location":{"end":{"column":40,"line":38},"start":{"column":28,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"34","location":{"end":{"column":60,"line":38},"start":{"column":53,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"35","location":{"end":{"column":111,"line":41},"start":{"column":10,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"36","location":{"end":{"column":6,"line":44},"start":{"column":119,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"37","location":{"end":{"column":33,"line":42},"start":{"column":21,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"39","location":{"end":{"column":40,"line":43},"start":{"column":28,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"38","location":{"end":{"column":58,"line":42},"start":{"column":48,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"13","location":{"end":{"column":42,"line":23},"start":{"column":28,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"14","location":{"end":{"column":55,"line":23},"start":{"column":49,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"40","location":{"end":{"column":60,"line":43},"start":{"column":53,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"41","location":{"end":{"column":110,"line":45},"start":{"column":10,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"42","location":{"end":{"column":6,"line":48},"start":{"column":118,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":58,"line":46},"start":{"column":48,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"43","location":{"end":{"column":33,"line":46},"start":{"column":21,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"45","location":{"end":{"column":40,"line":47},"start":{"column":28,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"46","location":{"end":{"column":60,"line":47},"start":{"column":53,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"47","location":{"end":{"column":103,"line":49},"start":{"column":10,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"49","location":{"end":{"column":33,"line":50},"start":{"column":21,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"48","location":{"end":{"column":6,"line":52},"start":{"column":111,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"50","location":{"end":{"column":58,"line":50},"start":{"column":48,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"52","location":{"end":{"column":60,"line":51},"start":{"column":53,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"53","location":{"end":{"column":71,"line":53},"start":{"column":10,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"51","location":{"end":{"column":40,"line":51},"start":{"column":28,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"54","location":{"end":{"column":6,"line":56},"start":{"column":79,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":33,"line":54},"start":{"column":21,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"58","location":{"end":{"column":60,"line":55},"start":{"column":53,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"57","location":{"end":{"column":40,"line":55},"start":{"column":28,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"56","location":{"end":{"column":58,"line":54},"start":{"column":48,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport { mount } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport 'jest-styled-components';\r\n\r\nimport { DasboardBtn } from './index';\r\nimport { Provider } from 'react-redux';\r\nimport store from '@/store/store';\r\n\r\ndescribe('DashboardBtn', () => {\r\n    const output = mount(\r\n        <Provider store={store}>\r\n            <DasboardBtn />\r\n        </Provider>\r\n    );\r\n\r\n    test('should render correctly', () => {\r\n        expect(toJson(output)).toMatchSnapshot();\r\n    });\r\n\r\n    test('the drawer should open on button click', () => {\r\n        output.find('Btn').simulate('click');\r\n        expect(output.find('StyledDrawer').prop('open')).toBe(true);\r\n    });\r\n\r\n    test('the drawer should close on an onClose prop function execution', () => {\r\n        output.find('StyledDrawer').invoke('onClose')();\r\n        expect(output.find('StyledDrawer').prop('open')).toBe(false);\r\n    });\r\n\r\n    test('X coordinate slider onChange function  should change value with smaller argument then default value ', () => {\r\n        output.find('SizeSlider').at(1).invoke('onChange')({}, 20);\r\n        expect(output.find('SizeSlider').at(1).prop('value')).toBe(20);\r\n    });\r\n\r\n    test('X coordinate slider onChange function should change value with bigger argument then default value', () => {\r\n        output.find('SizeSlider').at(1).invoke('onChange')({}, 100);\r\n        expect(output.find('SizeSlider').at(1).prop('value')).toBe(100);\r\n    });\r\n\r\n    test('Y coordinate slider onChange functionp should change value with smaller argument then default value', () => {\r\n        output.find('SizeSlider').at(0).invoke('onChange')({}, 20);\r\n        expect(output.find('SizeSlider').at(0).prop('value')).toBe(20);\r\n    });\r\n    test('Y coordinate slider onChange function  should change value with bigger argument then default value', () => {\r\n        output.find('SizeSlider').at(0).invoke('onChange')({}, 10);\r\n        expect(output.find('SizeSlider').at(0).prop('value')).toBe(10);\r\n    });\r\n    test('Speed slider onChange function  should change value with bigger argument then default value', () => {\r\n        output.find('SizeSlider').at(2).invoke('onChange')({}, 30);\r\n        expect(output.find('SizeSlider').at(2).prop('value')).toBe(30);\r\n    });\r\n    test('Random Index slider onChange function  should change value ', () => {\r\n        output.find('SizeSlider').at(3).invoke('onChange')({}, 0.5);\r\n        expect(output.find('SizeSlider').at(3).prop('value')).toBe(0.5);\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\components\\EntranceForm\\index.test.tsx":{"language":"typescript","mutants":[{"id":"60","location":{"end":{"column":2,"line":41},"start":{"column":32,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"62","location":{"end":{"column":35,"line":27},"start":{"column":10,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"59","location":{"end":{"column":24,"line":10},"start":{"column":10,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"63","location":{"end":{"column":6,"line":29},"start":{"column":43,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"64","location":{"end":{"column":54,"line":28},"start":{"column":40,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"65","location":{"end":{"column":55,"line":31},"start":{"column":10,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"67","location":{"end":{"column":34,"line":32},"start":{"column":21,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"66","location":{"end":{"column":6,"line":36},"start":{"column":63,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"68","location":{"end":{"column":53,"line":32},"start":{"column":43,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"69","location":{"end":{"column":10,"line":34},"start":{"column":55,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"71","location":{"end":{"column":37,"line":33},"start":{"column":30,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"72","location":{"end":{"column":65,"line":35},"start":{"column":59,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"70","location":{"end":{"column":39,"line":33},"start":{"column":21,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"73","location":{"end":{"column":74,"line":35},"start":{"column":67,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"74","location":{"end":{"column":39,"line":37},"start":{"column":10,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"75","location":{"end":{"column":6,"line":40},"start":{"column":47,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"76","location":{"end":{"column":32,"line":38},"start":{"column":21,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"77","location":{"end":{"column":50,"line":38},"start":{"column":41,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"78","location":{"end":{"column":54,"line":39},"start":{"column":47,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"61","location":{"end":{"column":6,"line":17},"start":{"column":30,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport { mount } from 'enzyme';\r\nimport { mountToJson } from 'enzyme-to-json';\r\nimport { EntranceForm } from '.';\r\nimport { Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from '@/store/store';\r\n\r\n\r\ndescribe('EntranceForm', () => {\r\n    const mockPush = jest.fn();\r\n\r\n    const historyMock: any = {\r\n        push: mockPush,\r\n        location: {},\r\n        listen: jest.fn()\r\n    };\r\n\r\n    const output = mount(\r\n        <Provider store={store}>\r\n            <Router history={historyMock}>\r\n                <EntranceForm />\r\n            </Router>\r\n        </Provider>\r\n    );\r\n\r\n    test('should render correctly', () => {\r\n        expect(mountToJson(output.find('EntranceForm'))).toMatchSnapshot();\r\n    });\r\n\r\n    test('test handleForm should save to localStorage', () => {\r\n        output.find('StyledInput').invoke('onChange')({\r\n            target: { value: 'Anton' }\r\n        });\r\n        expect(localStorage.setItem).toHaveBeenCalledWith('name', 'Anton');\r\n    });\r\n    test('test handleStart push route', () => {\r\n        output.find('StyledBtn').invoke('onClick')();\r\n        expect(mockPush).toHaveBeenCalledWith('/game');\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\components\\Grid\\index.test.tsx":{"language":"typescript","mutants":[{"id":"79","location":{"end":{"column":16,"line":11},"start":{"column":10,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"81","location":{"end":{"column":35,"line":17},"start":{"column":10,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"80","location":{"end":{"column":2,"line":38},"start":{"column":24,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"83","location":{"end":{"column":70,"line":21},"start":{"column":10,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"82","location":{"end":{"column":6,"line":19},"start":{"column":43,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"84","location":{"end":{"column":6,"line":24},"start":{"column":78,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"85","location":{"end":{"column":57,"line":22},"start":{"column":50,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"86","location":{"end":{"column":58,"line":23},"start":{"column":50,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"87","location":{"end":{"column":50,"line":26},"start":{"column":10,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"88","location":{"end":{"column":6,"line":28},"start":{"column":58,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"91","location":{"end":{"column":69,"line":30},"start":{"column":10,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"92","location":{"end":{"column":6,"line":32},"start":{"column":77,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"89","location":{"end":{"column":39,"line":27},"start":{"column":28,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"93","location":{"end":{"column":34,"line":31},"start":{"column":28,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"90","location":{"end":{"column":56,"line":27},"start":{"column":46,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"95","location":{"end":{"column":71,"line":31},"start":{"column":66,"line":31}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"97","location":{"end":{"column":6,"line":37},"start":{"column":83,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"94","location":{"end":{"column":58,"line":31},"start":{"column":47,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"96","location":{"end":{"column":75,"line":34},"start":{"column":10,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"98","location":{"end":{"column":27,"line":35},"start":{"column":21,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"100","location":{"end":{"column":70,"line":35},"start":{"column":63,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"101","location":{"end":{"column":34,"line":36},"start":{"column":28,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"99","location":{"end":{"column":52,"line":35},"start":{"column":40,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"103","location":{"end":{"column":70,"line":36},"start":{"column":66,"line":36}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"102","location":{"end":{"column":58,"line":36},"start":{"column":47,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport { mount } from 'enzyme';\r\nimport toJson, { mountToJson } from 'enzyme-to-json';\r\n\r\nimport 'jest-styled-components';\r\n\r\nimport { Grid } from './index';\r\nimport { Provider } from 'react-redux';\r\nimport store from '@/store/store';\r\n\r\ndescribe('Grid', () => {\r\n    const output = mount(\r\n        <Provider store={store}>\r\n            <Grid />\r\n        </Provider>\r\n    );\r\n    test('should render correctly', () => {\r\n        expect(toJson(output)).toMatchSnapshot();\r\n    });\r\n\r\n    test('by default width prop should be 50 and height should be 15', () => {\r\n        expect(output.find(Grid).children().prop('width')).toBe(30);\r\n        expect(output.find(Grid).children().prop('height')).toBe(15);\r\n    });\r\n\r\n    test('by default it should have 750 children', () => {\r\n        expect(output.find('Container').prop('children')).toHaveLength(450);\r\n    });\r\n\r\n    test('by default Cell components isClicked prop should be false', () => {\r\n        expect(output.find('Cell').at(0).prop('isClicked')).toBe(false);\r\n    });\r\n\r\n    test('Cell component onClick  the isClicked prop value should be true', () => {\r\n        output.find('Cell').at(0).find('StyledCell').simulate('click');\r\n        expect(output.find('Cell').at(0).prop('isClicked')).toBe(true);\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\components\\HelloWorld\\index.test.tsx":{"language":"typescript","mutants":[{"id":"104","location":{"end":{"column":22,"line":7},"start":{"column":10,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"106","location":{"end":{"column":35,"line":8},"start":{"column":10,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"105","location":{"end":{"column":2,"line":19},"start":{"column":30,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"108","location":{"end":{"column":41,"line":13},"start":{"column":10,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"107","location":{"end":{"column":6,"line":11},"start":{"column":43,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"109","location":{"end":{"column":6,"line":18},"start":{"column":49,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"110","location":{"end":{"column":32,"line":16},"start":{"column":25,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"111","location":{"end":{"column":59,"line":17},"start":{"column":51,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport { shallow } from 'enzyme';\r\nimport { shallowToJson } from 'enzyme-to-json';\r\n\r\nimport HelloWorld from './index';\r\n\r\ndescribe('HelloWorld', () => {\r\n    test('should render correctly', () => {\r\n        const output = shallow(<HelloWorld />);\r\n        expect(shallowToJson(output)).toMatchSnapshot();\r\n    });\r\n\r\n    test('should handle the click event', () => {\r\n        window.alert = jest.fn();\r\n        const output = shallow(<HelloWorld />);\r\n        output.simulate('click');\r\n        expect(window.alert).toHaveBeenCalledWith('Click!');\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\components\\LogoutBtn\\index.test.tsx":{"language":"typescript","mutants":[{"id":"112","location":{"end":{"column":21,"line":8},"start":{"column":10,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"113","location":{"end":{"column":2,"line":35},"start":{"column":29,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"114","location":{"end":{"column":6,"line":15},"start":{"column":30,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"115","location":{"end":{"column":35,"line":23},"start":{"column":10,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"118","location":{"end":{"column":6,"line":30},"start":{"column":69,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"117","location":{"end":{"column":61,"line":27},"start":{"column":10,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"119","location":{"end":{"column":32,"line":28},"start":{"column":25,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"116","location":{"end":{"column":6,"line":25},"start":{"column":43,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"120","location":{"end":{"column":68,"line":29},"start":{"column":62,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"121","location":{"end":{"column":48,"line":32},"start":{"column":10,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"122","location":{"end":{"column":6,"line":34},"start":{"column":56,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"123","location":{"end":{"column":50,"line":33},"start":{"column":47,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { shallow, mount } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport 'jest-styled-components';\r\nimport { LogoutBtn } from '.';\r\n\r\ndescribe('LogoutBtn', () => {\r\n    const mockPush = jest.fn();\r\n\r\n    const historyMock: any = {\r\n        push: mockPush,\r\n        location: {},\r\n        listen: jest.fn()\r\n    };\r\n\r\n    const output = mount(\r\n        <Router history={historyMock}>\r\n            <LogoutBtn />\r\n        </Router>\r\n    );\r\n\r\n    test('should render correctly', () => {\r\n        expect(toJson(output)).toMatchSnapshot();\r\n    });\r\n\r\n    test('handelLogout func should delete from localStorage', () => {\r\n        output.simulate('click');\r\n        expect(localStorage.removeItem).toHaveBeenCalledWith('name');\r\n    });\r\n\r\n    test('handelLogout should push the history', () => {\r\n        expect(mockPush).toHaveBeenCalledWith('/');\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\components\\Player\\index.test.tsx":{"language":"typescript","mutants":[{"id":"124","location":{"end":{"column":18,"line":9},"start":{"column":10,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"125","location":{"end":{"column":2,"line":31},"start":{"column":26,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"126","location":{"end":{"column":35,"line":16},"start":{"column":10,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"127","location":{"end":{"column":6,"line":18},"start":{"column":43,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"131","location":{"end":{"column":71,"line":21},"start":{"column":56,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"128","location":{"end":{"column":45,"line":20},"start":{"column":10,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"129","location":{"end":{"column":6,"line":22},"start":{"column":53,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"130","location":{"end":{"column":38,"line":21},"start":{"column":28,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"132","location":{"end":{"column":44,"line":24},"start":{"column":10,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"138","location":{"end":{"column":35,"line":27},"start":{"column":28,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"139","location":{"end":{"column":28,"line":28},"start":{"column":21,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"137","location":{"end":{"column":45,"line":26},"start":{"column":38,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"140","location":{"end":{"column":46,"line":28},"start":{"column":39,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"136","location":{"end":{"column":27,"line":26},"start":{"column":21,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"134","location":{"end":{"column":29,"line":25},"start":{"column":21,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"141","location":{"end":{"column":34,"line":29},"start":{"column":28,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"133","location":{"end":{"column":6,"line":30},"start":{"column":52,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"135","location":{"end":{"column":47,"line":25},"start":{"column":40,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport { mount } from 'enzyme';\r\nimport 'jest-styled-components';\r\nimport { Player } from '.';\r\nimport { mountToJson } from 'enzyme-to-json';\r\nimport store from '@/store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\ndescribe('Player', () => {\r\n    const output = mount(\r\n        <Provider store={store}>\r\n            <Player />\r\n        </Provider>\r\n    );\r\n\r\n    test('should render correctly', () => {\r\n        expect(mountToJson(output)).toMatchSnapshot();\r\n    });\r\n\r\n    test('Checking generation default state', () => {\r\n        expect(output.find('GenField').text()).toEqual('Generation: 1');\r\n    });\r\n\r\n    test('Checking Player  Play/Pause btns', () => {\r\n        output.find('Random').simulate('click');\r\n        output.find('Play').simulate('click');\r\n        expect(output.find('Pause').exists()).toBeTruthy;\r\n        output.find('Pause').simulate('click');\r\n        expect(output.find('Play').exists()).toBeTruthy;\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\store\\actions\\index.test.tsx":{"language":"typescript","mutants":[{"id":"142","location":{"end":{"column":24,"line":4},"start":{"column":10,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"143","location":{"end":{"column":2,"line":21},"start":{"column":32,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"146","location":{"end":{"column":38,"line":10},"start":{"column":8,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"144","location":{"end":{"column":40,"line":5},"start":{"column":38,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"145","location":{"end":{"column":6,"line":9},"start":{"column":22,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"147","location":{"end":{"column":6,"line":20},"start":{"column":46,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"148","location":{"end":{"column":10,"line":16},"start":{"column":32,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"149","location":{"end":{"column":14,"line":15},"start":{"column":13,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"150","location":{"end":{"column":30,"line":13},"start":{"column":26,"line":13}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"151","location":{"end":{"column":36,"line":14},"start":{"column":23,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { PlayerActions } from './index';\r\nimport configureStore from 'redux-mock-store';\r\n\r\ndescribe('test actions', () => {\r\n    const mockStore = configureStore([]);\r\n    const store = mockStore();\r\n    beforeEach(() => {\r\n        store.clearActions();\r\n    });\r\n    it('should create an action play', () => {\r\n        const expectedAction = [\r\n            {\r\n                payload: true,\r\n                type: 'PLAYER:PLAY'\r\n            }\r\n        ];\r\n\r\n        store.dispatch(PlayerActions.setIsPlay());\r\n        expect(store.getActions()).toMatchSnapshot();\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\store\\reducers\\index.test.ts":{"language":"typescript","mutants":[{"id":"152","location":{"end":{"column":25,"line":6},"start":{"column":10,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"153","location":{"end":{"column":2,"line":95},"start":{"column":33,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"155","location":{"end":{"column":29,"line":13},"start":{"column":15,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"154","location":{"end":{"column":6,"line":23},"start":{"column":19,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"157","location":{"end":{"column":40,"line":14},"start":{"column":39,"line":14}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"156","location":{"end":{"column":44,"line":14},"start":{"column":27,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"158","location":{"end":{"column":11,"line":17},"start":{"column":46,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"159","location":{"end":{"column":10,"line":17},"start":{"column":64,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"160","location":{"end":{"column":29,"line":16},"start":{"column":24,"line":16}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"161","location":{"end":{"column":22,"line":20},"start":{"column":17,"line":20}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"164","location":{"end":{"column":36,"line":26},"start":{"column":30,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"163","location":{"end":{"column":6,"line":44},"start":{"column":53,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"162","location":{"end":{"column":45,"line":24},"start":{"column":10,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"165","location":{"end":{"column":45,"line":26},"start":{"column":38,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"166","location":{"end":{"column":10,"line":39},"start":{"column":32,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"168","location":{"end":{"column":48,"line":30},"start":{"column":31,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"167","location":{"end":{"column":33,"line":29},"start":{"column":19,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"169","location":{"end":{"column":44,"line":30},"start":{"column":43,"line":30}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"172","location":{"end":{"column":33,"line":32},"start":{"column":28,"line":32}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"170","location":{"end":{"column":15,"line":33},"start":{"column":50,"line":30}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"171","location":{"end":{"column":14,"line":33},"start":{"column":68,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"177","location":{"end":{"column":36,"line":50},"start":{"column":27,"line":50}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"176","location":{"end":{"column":6,"line":69},"start":{"column":77,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"173","location":{"end":{"column":26,"line":35},"start":{"column":19,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"174","location":{"end":{"column":26,"line":36},"start":{"column":21,"line":36}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"175","location":{"end":{"column":69,"line":47},"start":{"column":10,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"178","location":{"end":{"column":10,"line":64},"start":{"column":32,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"182","location":{"end":{"column":15,"line":58},"start":{"column":50,"line":55}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"180","location":{"end":{"column":48,"line":55},"start":{"column":31,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"179","location":{"end":{"column":33,"line":54},"start":{"column":19,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"184","location":{"end":{"column":32,"line":57},"start":{"column":28,"line":57}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"181","location":{"end":{"column":44,"line":55},"start":{"column":43,"line":55}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"183","location":{"end":{"column":14,"line":58},"start":{"column":68,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"189","location":{"end":{"column":10,"line":89},"start":{"column":32,"line":78}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"191","location":{"end":{"column":48,"line":80},"start":{"column":31,"line":80}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"185","location":{"end":{"column":25,"line":61},"start":{"column":21,"line":61}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"186","location":{"end":{"column":69,"line":72},"start":{"column":10,"line":72}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"187","location":{"end":{"column":6,"line":94},"start":{"column":77,"line":72}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"190","location":{"end":{"column":33,"line":79},"start":{"column":19,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"192","location":{"end":{"column":44,"line":80},"start":{"column":43,"line":80}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"188","location":{"end":{"column":36,"line":75},"start":{"column":27,"line":75}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"193","location":{"end":{"column":15,"line":83},"start":{"column":50,"line":80}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"194","location":{"end":{"column":14,"line":83},"start":{"column":68,"line":80}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"195","location":{"end":{"column":33,"line":82},"start":{"column":28,"line":82}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"196","location":{"end":{"column":25,"line":86},"start":{"column":21,"line":86}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import { GridReducer } from './index';\r\nimport {} from 'module';\r\nimport { GreetingFormActions } from '../actions';\r\nimport { PlayerActions } from '@/store/actions';\r\n\r\ndescribe('INITIAL_STATE', () => {\r\n  \r\n\r\n    const x = 3;\r\n    const y = 3;\r\n\r\n    const state = {\r\n        axis: { x: x, y: y },\r\n        cells: Array.from({ length: y * x }, (item, index) => ({\r\n            index: index,\r\n            isClicked: false\r\n        })),\r\n        gen: 1,\r\n        name: null,\r\n        isPlay: false,\r\n        speed: 1,\r\n        randomIndex: 0.1\r\n    };\r\n    test('is correct case \"PLAYER:GET_NAME\"', () => {\r\n\r\n        localStorage.setItem('name', 'Anton')\r\n\r\n        const expectedState =  {\r\n            axis: { x: x, y: y },\r\n            cells: Array.from({ length: y * x }, (item, index) => ({\r\n                index: index,\r\n                isClicked: false\r\n            })),\r\n            gen: 1,\r\n            name: 'Anton',\r\n            isPlay: false,\r\n            speed: 1,\r\n            randomIndex: 0.1\r\n        };;\r\n\r\n        expect(GridReducer(state, PlayerActions.getName())).toEqual(\r\n            expectedState\r\n        );\r\n    });\r\n\r\n    \r\n    test('is correct case with big index \"GREETINGFORM:READY_GREED\"', () => {\r\n\r\n        const mockMath = Object.create(global.Math);\r\n        mockMath.random = () => 0.8;\r\n        global.Math = mockMath;\r\n\r\n        const expectedState =  {\r\n            axis: { x: x, y: y },\r\n            cells: Array.from({ length: y * x }, (item, index) => ({\r\n                index: index,\r\n                isClicked: true\r\n            })),\r\n            gen: 1,\r\n            name: null,\r\n            isPlay: true,\r\n            speed: 1,\r\n            randomIndex: 0.1\r\n        };;\r\n\r\n        expect(GridReducer(state, GreetingFormActions.setReady())).toEqual(\r\n            expectedState\r\n        );\r\n    });\r\n\r\n\r\n    test('is correct case with low index \"GREETINGFORM:READY_GREED\"', () => {\r\n\r\n        const mockMath = Object.create(global.Math);\r\n        mockMath.random = () => 0.6;\r\n        global.Math = mockMath;\r\n\r\n        const expectedState =  {\r\n            axis: { x: x, y: y },\r\n            cells: Array.from({ length: y * x }, (item, index) => ({\r\n                index: index,\r\n                isClicked: false\r\n            })),\r\n            gen: 1,\r\n            name: null,\r\n            isPlay: true,\r\n            speed: 1,\r\n            randomIndex: 0.1\r\n        };;\r\n\r\n        expect(GridReducer(state, GreetingFormActions.setReady())).toEqual(\r\n            expectedState\r\n        );\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\store\\sagas\\index.test.tsx":{"language":"typescript","mutants":[{"id":"197","location":{"end":{"column":17,"line":6},"start":{"column":10,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"198","location":{"end":{"column":2,"line":22},"start":{"column":25,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"199","location":{"end":{"column":37,"line":7},"start":{"column":10,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"200","location":{"end":{"column":6,"line":13},"start":{"column":45,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"201","location":{"end":{"column":49,"line":10},"start":{"column":18,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"203","location":{"end":{"column":61,"line":11},"start":{"column":23,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"202","location":{"end":{"column":47,"line":10},"start":{"column":26,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"205","location":{"end":{"column":59,"line":11},"start":{"column":55,"line":11}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"204","location":{"end":{"column":44,"line":11},"start":{"column":31,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"206","location":{"end":{"column":46,"line":14},"start":{"column":10,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"209","location":{"end":{"column":52,"line":17},"start":{"column":26,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"208","location":{"end":{"column":54,"line":17},"start":{"column":18,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"207","location":{"end":{"column":6,"line":21},"start":{"column":54,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"213","location":{"end":{"column":56,"line":19},"start":{"column":31,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"212","location":{"end":{"column":58,"line":19},"start":{"column":23,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"211","location":{"end":{"column":47,"line":18},"start":{"column":26,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"210","location":{"end":{"column":49,"line":18},"start":{"column":18,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { expectSaga } from 'redux-saga-test-plan';\r\nimport { put, select, take } from 'redux-saga/effects';\r\nimport { watchStartGame, watchStartGameFromForm } from './index';\r\nimport { rootReducer } from '../rootReducer';\r\n\r\ndescribe('sagas', () => {\r\n    test('check watchStartGame saga', () => {\r\n        return expectSaga(watchStartGame)\r\n            .withReducer(rootReducer)\r\n            .put({ type: 'CELLS:SIMULATE_LIFE' })\r\n            .dispatch({ type: 'PLAYER:PLAY', payload: true })\r\n            .run();\r\n    });\r\n    test('check watchStartGameFromForm saga ', () => {\r\n        return expectSaga(watchStartGameFromForm)\r\n            .withReducer(rootReducer)\r\n            .put({ type: 'GREETINGFORM:READY_GREED' })\r\n            .put({ type: 'CELLS:SIMULATE_LIFE' })\r\n            .dispatch({ type: 'GREETINGFORM:START_GAME' })\r\n            .run();\r\n    });\r\n});\r\n"},"C:\\Users\\xiaom\\Desktop\\new\\my_ts_boilerplate\\src\\utils\\algorithm\\index.test.ts":{"language":"typescript","mutants":[{"id":"214","location":{"end":{"column":21,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"217","location":{"end":{"column":6,"line":36},"start":{"column":46,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"215","location":{"end":{"column":2,"line":170},"start":{"column":29,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"216","location":{"end":{"column":38,"line":4},"start":{"column":10,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"221","location":{"end":{"column":47,"line":8},"start":{"column":17,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"218","location":{"end":{"column":10,"line":18},"start":{"column":28,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"219","location":{"end":{"column":33,"line":6},"start":{"column":19,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"220","location":{"end":{"column":14,"line":17},"start":{"column":20,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"224","location":{"end":{"column":44,"line":9},"start":{"column":40,"line":9}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"223","location":{"end":{"column":46,"line":9},"start":{"column":17,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"222","location":{"end":{"column":45,"line":8},"start":{"column":40,"line":8}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"226","location":{"end":{"column":45,"line":10},"start":{"column":40,"line":10}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"227","location":{"end":{"column":46,"line":11},"start":{"column":17,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"225","location":{"end":{"column":47,"line":10},"start":{"column":17,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"228","location":{"end":{"column":44,"line":11},"start":{"column":40,"line":11}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"229","location":{"end":{"column":46,"line":12},"start":{"column":17,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"231","location":{"end":{"column":47,"line":13},"start":{"column":17,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"234","location":{"end":{"column":45,"line":14},"start":{"column":40,"line":14}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"233","location":{"end":{"column":47,"line":14},"start":{"column":17,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"230","location":{"end":{"column":44,"line":12},"start":{"column":40,"line":12}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"232","location":{"end":{"column":45,"line":13},"start":{"column":40,"line":13}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"238","location":{"end":{"column":45,"line":16},"start":{"column":40,"line":16}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"235","location":{"end":{"column":47,"line":15},"start":{"column":17,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"236","location":{"end":{"column":45,"line":15},"start":{"column":40,"line":15}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"239","location":{"end":{"column":10,"line":29},"start":{"column":22,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"237","location":{"end":{"column":47,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"240","location":{"end":{"column":42,"line":20},"start":{"column":13,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"242","location":{"end":{"column":42,"line":21},"start":{"column":13,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"247","location":{"end":{"column":40,"line":23},"start":{"column":36,"line":23}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"248","location":{"end":{"column":42,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"245","location":{"end":{"column":41,"line":22},"start":{"column":36,"line":22}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"246","location":{"end":{"column":42,"line":23},"start":{"column":13,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"241","location":{"end":{"column":40,"line":20},"start":{"column":36,"line":20}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"243","location":{"end":{"column":40,"line":21},"start":{"column":36,"line":21}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"244","location":{"end":{"column":43,"line":22},"start":{"column":13,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"251","location":{"end":{"column":41,"line":25},"start":{"column":36,"line":25}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"250","location":{"end":{"column":43,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"255","location":{"end":{"column":41,"line":27},"start":{"column":36,"line":27}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"252","location":{"end":{"column":43,"line":26},"start":{"column":13,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"253","location":{"end":{"column":41,"line":26},"start":{"column":36,"line":26}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"254","location":{"end":{"column":43,"line":27},"start":{"column":13,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"249","location":{"end":{"column":40,"line":24},"start":{"column":36,"line":24}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"256","location":{"end":{"column":43,"line":28},"start":{"column":13,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"263","location":{"end":{"column":14,"line":50},"start":{"column":20,"line":40}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"260","location":{"end":{"column":6,"line":69},"start":{"column":49,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"257","location":{"end":{"column":41,"line":28},"start":{"column":36,"line":28}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"259","location":{"end":{"column":41,"line":37},"start":{"column":10,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"261","location":{"end":{"column":10,"line":51},"start":{"column":28,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"262","location":{"end":{"column":33,"line":39},"start":{"column":19,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"258","location":{"end":{"column":53,"line":33},"start":{"column":29,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"266","location":{"end":{"column":47,"line":42},"start":{"column":17,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"267","location":{"end":{"column":45,"line":42},"start":{"column":40,"line":42}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"265","location":{"end":{"column":45,"line":41},"start":{"column":40,"line":41}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"272","location":{"end":{"column":46,"line":45},"start":{"column":17,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"271","location":{"end":{"column":44,"line":44},"start":{"column":40,"line":44}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"264","location":{"end":{"column":47,"line":41},"start":{"column":17,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"274","location":{"end":{"column":47,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"269","location":{"end":{"column":45,"line":43},"start":{"column":40,"line":43}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"270","location":{"end":{"column":46,"line":44},"start":{"column":17,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"268","location":{"end":{"column":47,"line":43},"start":{"column":17,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"273","location":{"end":{"column":44,"line":45},"start":{"column":40,"line":45}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"275","location":{"end":{"column":45,"line":46},"start":{"column":40,"line":46}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"278","location":{"end":{"column":47,"line":48},"start":{"column":17,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"280","location":{"end":{"column":47,"line":49},"start":{"column":17,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"282","location":{"end":{"column":10,"line":62},"start":{"column":22,"line":52}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"279","location":{"end":{"column":45,"line":48},"start":{"column":40,"line":48}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"277","location":{"end":{"column":44,"line":47},"start":{"column":40,"line":47}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"281","location":{"end":{"column":45,"line":49},"start":{"column":40,"line":49}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"276","location":{"end":{"column":46,"line":47},"start":{"column":17,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"283","location":{"end":{"column":43,"line":53},"start":{"column":13,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"286","location":{"end":{"column":41,"line":54},"start":{"column":36,"line":54}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"284","location":{"end":{"column":41,"line":53},"start":{"column":36,"line":53}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"289","location":{"end":{"column":42,"line":56},"start":{"column":13,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"285","location":{"end":{"column":43,"line":54},"start":{"column":13,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"287","location":{"end":{"column":43,"line":55},"start":{"column":13,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"288","location":{"end":{"column":41,"line":55},"start":{"column":36,"line":55}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"290","location":{"end":{"column":40,"line":56},"start":{"column":36,"line":56}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"292","location":{"end":{"column":40,"line":57},"start":{"column":36,"line":57}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"294","location":{"end":{"column":41,"line":58},"start":{"column":36,"line":58}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"293","location":{"end":{"column":43,"line":58},"start":{"column":13,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"296","location":{"end":{"column":40,"line":59},"start":{"column":36,"line":59}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"291","location":{"end":{"column":42,"line":57},"start":{"column":13,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"297","location":{"end":{"column":42,"line":60},"start":{"column":13,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"295","location":{"end":{"column":42,"line":59},"start":{"column":13,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"300","location":{"end":{"column":41,"line":61},"start":{"column":36,"line":61}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"301","location":{"end":{"column":53,"line":66},"start":{"column":29,"line":65}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"303","location":{"end":{"column":6,"line":103},"start":{"column":50,"line":71}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"299","location":{"end":{"column":43,"line":61},"start":{"column":13,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"298","location":{"end":{"column":40,"line":60},"start":{"column":36,"line":60}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"302","location":{"end":{"column":42,"line":71},"start":{"column":10,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"304","location":{"end":{"column":10,"line":85},"start":{"column":28,"line":72}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"305","location":{"end":{"column":33,"line":73},"start":{"column":19,"line":73}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"306","location":{"end":{"column":14,"line":84},"start":{"column":20,"line":74}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"310","location":{"end":{"column":45,"line":76},"start":{"column":40,"line":76}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"308","location":{"end":{"column":45,"line":75},"start":{"column":40,"line":75}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"307","location":{"end":{"column":47,"line":75},"start":{"column":17,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"309","location":{"end":{"column":47,"line":76},"start":{"column":17,"line":76}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"311","location":{"end":{"column":47,"line":77},"start":{"column":17,"line":77}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"312","location":{"end":{"column":45,"line":77},"start":{"column":40,"line":77}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"313","location":{"end":{"column":47,"line":78},"start":{"column":17,"line":78}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"316","location":{"end":{"column":44,"line":79},"start":{"column":40,"line":79}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"314","location":{"end":{"column":45,"line":78},"start":{"column":40,"line":78}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"315","location":{"end":{"column":46,"line":79},"start":{"column":17,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"317","location":{"end":{"column":46,"line":80},"start":{"column":17,"line":80}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"318","location":{"end":{"column":44,"line":80},"start":{"column":40,"line":80}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"324","location":{"end":{"column":45,"line":83},"start":{"column":40,"line":83}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"320","location":{"end":{"column":45,"line":81},"start":{"column":40,"line":81}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"322","location":{"end":{"column":44,"line":82},"start":{"column":40,"line":82}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"325","location":{"end":{"column":10,"line":96},"start":{"column":22,"line":86}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"321","location":{"end":{"column":46,"line":82},"start":{"column":17,"line":82}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"326","location":{"end":{"column":43,"line":87},"start":{"column":13,"line":87}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"319","location":{"end":{"column":47,"line":81},"start":{"column":17,"line":81}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"323","location":{"end":{"column":47,"line":83},"start":{"column":17,"line":83}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"327","location":{"end":{"column":41,"line":87},"start":{"column":36,"line":87}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"335","location":{"end":{"column":40,"line":91},"start":{"column":36,"line":91}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"334","location":{"end":{"column":42,"line":91},"start":{"column":13,"line":91}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"328","location":{"end":{"column":43,"line":88},"start":{"column":13,"line":88}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"330","location":{"end":{"column":43,"line":89},"start":{"column":13,"line":89}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"333","location":{"end":{"column":41,"line":90},"start":{"column":36,"line":90}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"329","location":{"end":{"column":41,"line":88},"start":{"column":36,"line":88}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"331","location":{"end":{"column":41,"line":89},"start":{"column":36,"line":89}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"332","location":{"end":{"column":43,"line":90},"start":{"column":13,"line":90}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"336","location":{"end":{"column":42,"line":92},"start":{"column":13,"line":92}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"340","location":{"end":{"column":42,"line":94},"start":{"column":13,"line":94}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"337","location":{"end":{"column":40,"line":92},"start":{"column":36,"line":92}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"338","location":{"end":{"column":43,"line":93},"start":{"column":13,"line":93}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"339","location":{"end":{"column":41,"line":93},"start":{"column":36,"line":93}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"341","location":{"end":{"column":40,"line":94},"start":{"column":36,"line":94}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"342","location":{"end":{"column":42,"line":95},"start":{"column":13,"line":95}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"347","location":{"end":{"column":10,"line":118},"start":{"column":28,"line":105}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"343","location":{"end":{"column":40,"line":95},"start":{"column":36,"line":95}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"350","location":{"end":{"column":46,"line":108},"start":{"column":17,"line":108}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"349","location":{"end":{"column":14,"line":117},"start":{"column":20,"line":107}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"345","location":{"end":{"column":46,"line":104},"start":{"column":10,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"344","location":{"end":{"column":53,"line":100},"start":{"column":29,"line":99}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"348","location":{"end":{"column":33,"line":106},"start":{"column":19,"line":106}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"346","location":{"end":{"column":6,"line":136},"start":{"column":54,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"351","location":{"end":{"column":44,"line":108},"start":{"column":40,"line":108}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"354","location":{"end":{"column":46,"line":110},"start":{"column":17,"line":110}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"353","location":{"end":{"column":45,"line":109},"start":{"column":40,"line":109}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"352","location":{"end":{"column":47,"line":109},"start":{"column":17,"line":109}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"356","location":{"end":{"column":47,"line":111},"start":{"column":17,"line":111}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"355","location":{"end":{"column":44,"line":110},"start":{"column":40,"line":110}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"357","location":{"end":{"column":45,"line":111},"start":{"column":40,"line":111}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"358","location":{"end":{"column":46,"line":112},"start":{"column":17,"line":112}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"362","location":{"end":{"column":46,"line":114},"start":{"column":17,"line":114}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"359","location":{"end":{"column":44,"line":112},"start":{"column":40,"line":112}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"364","location":{"end":{"column":47,"line":115},"start":{"column":17,"line":115}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"363","location":{"end":{"column":44,"line":114},"start":{"column":40,"line":114}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"361","location":{"end":{"column":45,"line":113},"start":{"column":40,"line":113}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"360","location":{"end":{"column":47,"line":113},"start":{"column":17,"line":113}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"365","location":{"end":{"column":45,"line":115},"start":{"column":40,"line":115}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"366","location":{"end":{"column":46,"line":116},"start":{"column":17,"line":116}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"369","location":{"end":{"column":43,"line":120},"start":{"column":13,"line":120}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"367","location":{"end":{"column":44,"line":116},"start":{"column":40,"line":116}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"368","location":{"end":{"column":10,"line":129},"start":{"column":22,"line":119}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"370","location":{"end":{"column":41,"line":120},"start":{"column":36,"line":120}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"371","location":{"end":{"column":42,"line":121},"start":{"column":13,"line":121}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"372","location":{"end":{"column":40,"line":121},"start":{"column":36,"line":121}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"373","location":{"end":{"column":43,"line":122},"start":{"column":13,"line":122}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"374","location":{"end":{"column":41,"line":122},"start":{"column":36,"line":122}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"375","location":{"end":{"column":42,"line":123},"start":{"column":13,"line":123}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"376","location":{"end":{"column":40,"line":123},"start":{"column":36,"line":123}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"378","location":{"end":{"column":41,"line":124},"start":{"column":36,"line":124}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"377","location":{"end":{"column":43,"line":124},"start":{"column":13,"line":124}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"383","location":{"end":{"column":42,"line":127},"start":{"column":13,"line":127}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"379","location":{"end":{"column":42,"line":125},"start":{"column":13,"line":125}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"381","location":{"end":{"column":43,"line":126},"start":{"column":13,"line":126}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"385","location":{"end":{"column":43,"line":128},"start":{"column":13,"line":128}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"382","location":{"end":{"column":41,"line":126},"start":{"column":36,"line":126}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"380","location":{"end":{"column":40,"line":125},"start":{"column":36,"line":125}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"384","location":{"end":{"column":40,"line":127},"start":{"column":36,"line":127}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"387","location":{"end":{"column":53,"line":133},"start":{"column":29,"line":132}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"392","location":{"end":{"column":14,"line":150},"start":{"column":20,"line":140}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"390","location":{"end":{"column":10,"line":151},"start":{"column":28,"line":138}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"389","location":{"end":{"column":6,"line":169},"start":{"column":55,"line":137}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"391","location":{"end":{"column":33,"line":139},"start":{"column":19,"line":139}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"393","location":{"end":{"column":46,"line":141},"start":{"column":17,"line":141}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"386","location":{"end":{"column":41,"line":128},"start":{"column":36,"line":128}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"388","location":{"end":{"column":47,"line":137},"start":{"column":10,"line":137}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"395","location":{"end":{"column":46,"line":142},"start":{"column":17,"line":142}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"394","location":{"end":{"column":44,"line":141},"start":{"column":40,"line":141}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"397","location":{"end":{"column":46,"line":143},"start":{"column":17,"line":143}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"399","location":{"end":{"column":47,"line":144},"start":{"column":17,"line":144}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"398","location":{"end":{"column":44,"line":143},"start":{"column":40,"line":143}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"396","location":{"end":{"column":44,"line":142},"start":{"column":40,"line":142}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"400","location":{"end":{"column":45,"line":144},"start":{"column":40,"line":144}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"401","location":{"end":{"column":47,"line":145},"start":{"column":17,"line":145}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"403","location":{"end":{"column":47,"line":146},"start":{"column":17,"line":146}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"404","location":{"end":{"column":45,"line":146},"start":{"column":40,"line":146}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"402","location":{"end":{"column":45,"line":145},"start":{"column":40,"line":145}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"406","location":{"end":{"column":45,"line":147},"start":{"column":40,"line":147}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"412","location":{"end":{"column":43,"line":153},"start":{"column":13,"line":153}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"408","location":{"end":{"column":45,"line":148},"start":{"column":40,"line":148}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"407","location":{"end":{"column":47,"line":148},"start":{"column":17,"line":148}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"405","location":{"end":{"column":47,"line":147},"start":{"column":17,"line":147}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"409","location":{"end":{"column":47,"line":149},"start":{"column":17,"line":149}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"411","location":{"end":{"column":10,"line":162},"start":{"column":22,"line":152}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"410","location":{"end":{"column":45,"line":149},"start":{"column":40,"line":149}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"413","location":{"end":{"column":41,"line":153},"start":{"column":36,"line":153}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"416","location":{"end":{"column":43,"line":155},"start":{"column":13,"line":155}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"415","location":{"end":{"column":40,"line":154},"start":{"column":36,"line":154}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"417","location":{"end":{"column":41,"line":155},"start":{"column":36,"line":155}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"414","location":{"end":{"column":42,"line":154},"start":{"column":13,"line":154}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"420","location":{"end":{"column":42,"line":157},"start":{"column":13,"line":157}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"418","location":{"end":{"column":43,"line":156},"start":{"column":13,"line":156}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"419","location":{"end":{"column":41,"line":156},"start":{"column":36,"line":156}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"423","location":{"end":{"column":41,"line":158},"start":{"column":36,"line":158}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"422","location":{"end":{"column":43,"line":158},"start":{"column":13,"line":158}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"421","location":{"end":{"column":40,"line":157},"start":{"column":36,"line":157}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"427","location":{"end":{"column":41,"line":160},"start":{"column":36,"line":160}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"424","location":{"end":{"column":43,"line":159},"start":{"column":13,"line":159}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"426","location":{"end":{"column":43,"line":160},"start":{"column":13,"line":160}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"425","location":{"end":{"column":41,"line":159},"start":{"column":36,"line":159}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"429","location":{"end":{"column":41,"line":161},"start":{"column":36,"line":161}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"430","location":{"end":{"column":53,"line":166},"start":{"column":29,"line":165}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"428","location":{"end":{"column":43,"line":161},"start":{"column":13,"line":161}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { simulateLife } from '.';\r\n\r\ndescribe('algorithm', () => {\r\n    test('test simulateLife left top', () => {\r\n        const input: any = {\r\n            axis: { x: 3, y: 3 },\r\n            cells: [\r\n                { index: 0, isClicked: false },\r\n                { index: 1, isClicked: true },\r\n                { index: 2, isClicked: false },\r\n                { index: 3, isClicked: true },\r\n                { index: 4, isClicked: true },\r\n                { index: 5, isClicked: false },\r\n                { index: 6, isClicked: false },\r\n                { index: 7, isClicked: false },\r\n                { index: 8, isClicked: false }\r\n            ]\r\n        };\r\n        let output = [\r\n            { index: 0, isClicked: true },\r\n            { index: 1, isClicked: true },\r\n            { index: 2, isClicked: false },\r\n            { index: 3, isClicked: true },\r\n            { index: 4, isClicked: true },\r\n            { index: 5, isClicked: false },\r\n            { index: 6, isClicked: false },\r\n            { index: 7, isClicked: false },\r\n            { index: 8, isClicked: false }\r\n        ];\r\n\r\n        expect(\r\n            input.cells.map((obj, index, arr) =>\r\n                simulateLife(obj, index, arr, input)\r\n            )\r\n        ).toEqual(output);\r\n    });\r\n    test('test simulateLife left bottom', () => {\r\n        const input: any = {\r\n            axis: { x: 3, y: 3 },\r\n            cells: [\r\n                { index: 0, isClicked: false },\r\n                { index: 1, isClicked: false },\r\n                { index: 2, isClicked: false },\r\n                { index: 3, isClicked: true },\r\n                { index: 4, isClicked: true },\r\n                { index: 5, isClicked: false },\r\n                { index: 6, isClicked: true },\r\n                { index: 7, isClicked: false },\r\n                { index: 8, isClicked: false }\r\n            ]\r\n        };\r\n        let output = [\r\n            { index: 0, isClicked: false },\r\n            { index: 1, isClicked: false },\r\n            { index: 2, isClicked: false },\r\n            { index: 3, isClicked: true },\r\n            { index: 4, isClicked: true },\r\n            { index: 5, isClicked: false },\r\n            { index: 6, isClicked: true },\r\n            { index: 7, isClicked: true },\r\n            { index: 8, isClicked: false }\r\n        ];\r\n\r\n        expect(\r\n            input.cells.map((obj, index, arr) =>\r\n                simulateLife(obj, index, arr, input)\r\n            )\r\n        ).toEqual(output);\r\n    });\r\n\r\n    test('test simulateLife right bottom', () => {\r\n        const input: any = {\r\n            axis: { x: 3, y: 3 },\r\n            cells: [\r\n                { index: 0, isClicked: false },\r\n                { index: 1, isClicked: false },\r\n                { index: 2, isClicked: false },\r\n                { index: 3, isClicked: false },\r\n                { index: 4, isClicked: true },\r\n                { index: 5, isClicked: true },\r\n                { index: 6, isClicked: false },\r\n                { index: 7, isClicked: true },\r\n                { index: 8, isClicked: false }\r\n            ]\r\n        };\r\n        let output = [\r\n            { index: 0, isClicked: false },\r\n            { index: 1, isClicked: false },\r\n            { index: 2, isClicked: false },\r\n            { index: 3, isClicked: false },\r\n            { index: 4, isClicked: true },\r\n            { index: 5, isClicked: true },\r\n            { index: 6, isClicked: false },\r\n            { index: 7, isClicked: true },\r\n            { index: 8, isClicked: true }\r\n        ];\r\n\r\n        expect(\r\n            input.cells.map((obj, index, arr) =>\r\n                simulateLife(obj, index, arr, input)\r\n            )\r\n        ).toEqual(output);\r\n    });\r\n    test('test simulateLife center when true', () => {\r\n        const input: any = {\r\n            axis: { x: 3, y: 3 },\r\n            cells: [\r\n                { index: 0, isClicked: true },\r\n                { index: 1, isClicked: false },\r\n                { index: 2, isClicked: true },\r\n                { index: 3, isClicked: false },\r\n                { index: 4, isClicked: true },\r\n                { index: 5, isClicked: false },\r\n                { index: 6, isClicked: true },\r\n                { index: 7, isClicked: false },\r\n                { index: 8, isClicked: true }\r\n            ]\r\n        };\r\n        let output = [\r\n            { index: 0, isClicked: false },\r\n            { index: 1, isClicked: true },\r\n            { index: 2, isClicked: false },\r\n            { index: 3, isClicked: true },\r\n            { index: 4, isClicked: false },\r\n            { index: 5, isClicked: true },\r\n            { index: 6, isClicked: false },\r\n            { index: 7, isClicked: true },\r\n            { index: 8, isClicked: false }\r\n        ];\r\n\r\n        expect(\r\n            input.cells.map((obj, index, arr) =>\r\n                simulateLife(obj, index, arr, input)\r\n            )\r\n        ).toEqual(output);\r\n    });\r\n    test('test simulateLife center when false', () => {\r\n        const input: any = {\r\n            axis: { x: 3, y: 3 },\r\n            cells: [\r\n                { index: 0, isClicked: true },\r\n                { index: 1, isClicked: true },\r\n                { index: 2, isClicked: true },\r\n                { index: 3, isClicked: false },\r\n                { index: 4, isClicked: false },\r\n                { index: 5, isClicked: false },\r\n                { index: 6, isClicked: false },\r\n                { index: 7, isClicked: false },\r\n                { index: 8, isClicked: false }\r\n            ]\r\n        };\r\n        let output = [\r\n            { index: 0, isClicked: false },\r\n            { index: 1, isClicked: true },\r\n            { index: 2, isClicked: false },\r\n            { index: 3, isClicked: false },\r\n            { index: 4, isClicked: true },\r\n            { index: 5, isClicked: false },\r\n            { index: 6, isClicked: false },\r\n            { index: 7, isClicked: false },\r\n            { index: 8, isClicked: false }\r\n        ];\r\n\r\n        expect(\r\n            input.cells.map((obj, index, arr) =>\r\n                simulateLife(obj, index, arr, input)\r\n            )\r\n        ).toEqual(output);\r\n    });\r\n});\r\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};